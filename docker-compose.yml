version: "3.9"
services:
  redis:
    image: 'redis:6-alpine'
    command: redis-server
    container_name: receipt-redis
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/data'
    networks:
      - receipt-docker-network

  sidekiq:
    depends_on:
      - 'pg_receipt_db_new'
      - 'redis'
    build: .
    container_name: receipt-sidekiq
    command: bundle exec sidekiq
    volumes:
      - '.:/my_receipt'
      - '/my_receipt/tmp'
    environment:
      REDIS_URL_SIDEKIQ: redis://redis:6379/1
    networks:
      - receipt-docker-network

  pg_receipt_db_new:
    image: postgres:15.2-bullseye
    container_name: receipt-db_new
    restart: always
    environment:
      # - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    # ports:
    #   - 54320:5432
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - receipt-docker-network

  receipt:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    container_name: receipt-main
    restart: always
    volumes:
      - .:/my_receipt
    environment:
      REDIS_URL_SIDEKIQ: redis://redis:6379/1
    depends_on:
      - pg_receipt_db_new
      # - webpack
    networks:
      - receipt-docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: receipt-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - receipt
    networks:
      - receipt-docker-network

volumes:
  redis:

networks:
  receipt-docker-network:
    driver: bridge